// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Registration.API.Migrations
{
    [DbContext(typeof(RegistrationDBContext))]
    partial class RegistrationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Database.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(920),
                            Name = "BA",
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(923),
                            Name = "BCA",
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(925),
                            Name = "MBA",
                            isActive = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(926),
                            Name = "BTech",
                            isActive = true
                        });
                });

            modelBuilder.Entity("Database.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Database.Entities.States", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(761),
                            Name = "Andhra Pradesh",
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(770),
                            Name = "Arunachal Pradesh",
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(772),
                            Name = "Punjab",
                            isActive = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(773),
                            Name = "Chandigarh",
                            isActive = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(775),
                            Name = "Haryana",
                            isActive = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(776),
                            Name = "Himachal Pradesh",
                            isActive = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Seeder",
                            CreatedOn = new DateTime(2024, 2, 28, 17, 18, 38, 986, DateTimeKind.Utc).AddTicks(778),
                            Name = "Delhi",
                            isActive = true
                        });
                });

            modelBuilder.Entity("Database.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnrollmentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("EnrollmentNo")
                        .IsUnique();

                    b.HasIndex("StateId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Database.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.Entities.Student", b =>
                {
                    b.HasOne("Database.Entities.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.States", "State")
                        .WithMany("Students")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Database.Entities.User", b =>
                {
                    b.HasOne("Database.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Database.Entities.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Database.Entities.States", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
